

// FUNCTIONS //
function int unsigned branchPCcalculation (int unsigned aluResult, int unsigned encodedInstr, int unsigned pcReg);
	if (((getInstrType(encodedInstr) == instr_beq) && (aluResult == 0))) begin return ((pcReg + getImmediate(encodedInstr))); end
	else if (!(((getInstrType(encodedInstr) == instr_beq) && (aluResult == 0))) && ((getInstrType(encodedInstr) == instr_bne) && (aluResult != 0))) begin return ((pcReg + getImmediate(encodedInstr))); end
	else if (!(((getInstrType(encodedInstr) == instr_beq) && (aluResult == 0))) && !(((getInstrType(encodedInstr) == instr_bne) && (aluResult != 0))) && ((getInstrType(encodedInstr) == instr_blt) && (aluResult == 1))) begin return ((pcReg + getImmediate(encodedInstr))); end
	else if (!(((getInstrType(encodedInstr) == instr_beq) && (aluResult == 0))) && !(((getInstrType(encodedInstr) == instr_bne) && (aluResult != 0))) && !(((getInstrType(encodedInstr) == instr_blt) && (aluResult == 1))) && ((getInstrType(encodedInstr) == instr_bge) && (aluResult == 0))) begin return ((pcReg + getImmediate(encodedInstr))); end
	else if (!(((getInstrType(encodedInstr) == instr_beq) && (aluResult == 0))) && !(((getInstrType(encodedInstr) == instr_bne) && (aluResult != 0))) && !(((getInstrType(encodedInstr) == instr_blt) && (aluResult == 1))) && !(((getInstrType(encodedInstr) == instr_bge) && (aluResult == 0))) && ((getInstrType(encodedInstr) == instr_bltu) && (aluResult == 1))) begin return ((pcReg + getImmediate(encodedInstr))); end
	else if (!(((getInstrType(encodedInstr) == instr_beq) && (aluResult == 0))) && !(((getInstrType(encodedInstr) == instr_bne) && (aluResult != 0))) && !(((getInstrType(encodedInstr) == instr_blt) && (aluResult == 1))) && !(((getInstrType(encodedInstr) == instr_bge) && (aluResult == 0))) && !(((getInstrType(encodedInstr) == instr_bltu) && (aluResult == 1))) && ((getInstrType(encodedInstr) == instr_bgeu) && (aluResult == 0))) begin return ((pcReg + getImmediate(encodedInstr))); end
	else if (!(((getInstrType(encodedInstr) == instr_beq) && (aluResult == 0))) && !(((getInstrType(encodedInstr) == instr_bne) && (aluResult != 0))) && !(((getInstrType(encodedInstr) == instr_blt) && (aluResult == 1))) && !(((getInstrType(encodedInstr) == instr_bge) && (aluResult == 0))) && !(((getInstrType(encodedInstr) == instr_bltu) && (aluResult == 1))) && !(((getInstrType(encodedInstr) == instr_bgeu) && (aluResult == 0)))) begin return ((pcReg + 4)); end
endfunction

function ALUfuncType getALUfunc (InstrType instr);
	if ((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) begin return (alu_add); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && (((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) begin return (alu_sub); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && ((instr == instr_sll) || (instr == instr_slli))) begin return (alu_sll); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && ((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) begin return (alu_slt); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && !(((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) && ((((instr == instr_sltu) || (instr == instr_sltui)) || (instr == instr_bltu)) || (instr == instr_bgeu))) begin return (alu_sltu); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && !(((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) && !(((((instr == instr_sltu) || (instr == instr_sltui)) || (instr == instr_bltu)) || (instr == instr_bgeu))) && ((instr == instr_xor) || (instr == instr_xori))) begin return (alu_xor); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && !(((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) && !(((((instr == instr_sltu) || (instr == instr_sltui)) || (instr == instr_bltu)) || (instr == instr_bgeu))) && !(((instr == instr_xor) || (instr == instr_xori))) && ((instr == instr_srl) || (instr == instr_srli))) begin return (alu_srl); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && !(((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) && !(((((instr == instr_sltu) || (instr == instr_sltui)) || (instr == instr_bltu)) || (instr == instr_bgeu))) && !(((instr == instr_xor) || (instr == instr_xori))) && !(((instr == instr_srl) || (instr == instr_srli))) && ((instr == instr_sra) || (instr == instr_srai))) begin return (alu_sra); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && !(((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) && !(((((instr == instr_sltu) || (instr == instr_sltui)) || (instr == instr_bltu)) || (instr == instr_bgeu))) && !(((instr == instr_xor) || (instr == instr_xori))) && !(((instr == instr_srl) || (instr == instr_srli))) && !(((instr == instr_sra) || (instr == instr_srai))) && ((instr == instr_or) || (instr == instr_ori))) begin return (alu_or); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && !(((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) && !(((((instr == instr_sltu) || (instr == instr_sltui)) || (instr == instr_bltu)) || (instr == instr_bgeu))) && !(((instr == instr_xor) || (instr == instr_xori))) && !(((instr == instr_srl) || (instr == instr_srli))) && !(((instr == instr_sra) || (instr == instr_srai))) && !(((instr == instr_or) || (instr == instr_ori))) && ((instr == instr_and) || (instr == instr_andi))) begin return (alu_and); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && !(((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) && !(((((instr == instr_sltu) || (instr == instr_sltui)) || (instr == instr_bltu)) || (instr == instr_bgeu))) && !(((instr == instr_xor) || (instr == instr_xori))) && !(((instr == instr_srl) || (instr == instr_srli))) && !(((instr == instr_sra) || (instr == instr_srai))) && !(((instr == instr_or) || (instr == instr_ori))) && !(((instr == instr_and) || (instr == instr_andi))) && ((instr == instr_jalr) || (instr == instr_jal))) begin return (alu_x); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && !(((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) && !(((((instr == instr_sltu) || (instr == instr_sltui)) || (instr == instr_bltu)) || (instr == instr_bgeu))) && !(((instr == instr_xor) || (instr == instr_xori))) && !(((instr == instr_srl) || (instr == instr_srli))) && !(((instr == instr_sra) || (instr == instr_srai))) && !(((instr == instr_or) || (instr == instr_ori))) && !(((instr == instr_and) || (instr == instr_andi))) && !(((instr == instr_jalr) || (instr == instr_jal))) && (instr == instr_lui)) begin return (alu_copy1); end
	else if (!((((((((((((instr == instr_add) || (instr == instr_addi)) || (instr == instr_lb)) || (instr == instr_lh)) || (instr == instr_lw)) || (instr == instr_lbu)) || (instr == instr_lhu)) || (instr == instr_sb)) || (instr == instr_sh)) || (instr == instr_sw)) || (instr == instr_auipc))) && !((((instr == instr_sub) || (instr == instr_beq)) || (instr == instr_bne))) && !(((instr == instr_sll) || (instr == instr_slli))) && !(((((instr == instr_slt) || (instr == instr_slti)) || (instr == instr_blt)) || (instr == instr_bge))) && !(((((instr == instr_sltu) || (instr == instr_sltui)) || (instr == instr_bltu)) || (instr == instr_bgeu))) && !(((instr == instr_xor) || (instr == instr_xori))) && !(((instr == instr_srl) || (instr == instr_srli))) && !(((instr == instr_sra) || (instr == instr_srai))) && !(((instr == instr_or) || (instr == instr_ori))) && !(((instr == instr_and) || (instr == instr_andi))) && !(((instr == instr_jalr) || (instr == instr_jal))) && !((instr == instr_lui))) begin return (alu_x); end
endfunction

function int unsigned getALUresult (ALUfuncType aluFunction, int unsigned operand1, int unsigned operand2);
	if ((aluFunction == alu_add)) begin return ((operand1 + operand2)); end
	else if (!((aluFunction == alu_add)) && (aluFunction == alu_sub)) begin return ((operand1 + (operand2 * 4294967295))); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && (aluFunction == alu_and)) begin return ((operand1 & operand2)); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && (aluFunction == alu_or)) begin return ((operand1 | operand2)); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && (aluFunction == alu_xor)) begin return ((operand1 ^ operand2)); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && !((aluFunction == alu_xor)) && (aluFunction == alu_slt) && (signed'(32'(operand1)) < signed'(32'(operand2)))) begin return (1); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && !((aluFunction == alu_xor)) && (aluFunction == alu_slt) && !((signed'(32'(operand1)) < signed'(32'(operand2))))) begin return (0); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && !((aluFunction == alu_xor)) && !((aluFunction == alu_slt)) && (aluFunction == alu_sltu) && (operand1 < operand2)) begin return (1); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && !((aluFunction == alu_xor)) && !((aluFunction == alu_slt)) && (aluFunction == alu_sltu) && !((operand1 < operand2))) begin return (0); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && !((aluFunction == alu_xor)) && !((aluFunction == alu_slt)) && !((aluFunction == alu_sltu)) && (aluFunction == alu_sll)) begin return ((operand1<<(operand2 & 31))); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && !((aluFunction == alu_xor)) && !((aluFunction == alu_slt)) && !((aluFunction == alu_sltu)) && !((aluFunction == alu_sll)) && (aluFunction == alu_sra)) begin return (unsigned'(32'((signed'(32'(operand1))>>signed'(32'((operand2 & 31))))))); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && !((aluFunction == alu_xor)) && !((aluFunction == alu_slt)) && !((aluFunction == alu_sltu)) && !((aluFunction == alu_sll)) && !((aluFunction == alu_sra)) && (aluFunction == alu_srl)) begin return ((operand1>>(operand2 & 31))); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && !((aluFunction == alu_xor)) && !((aluFunction == alu_slt)) && !((aluFunction == alu_sltu)) && !((aluFunction == alu_sll)) && !((aluFunction == alu_sra)) && !((aluFunction == alu_srl)) && (aluFunction == alu_copy1)) begin return (operand1); end
	else if (!((aluFunction == alu_add)) && !((aluFunction == alu_sub)) && !((aluFunction == alu_and)) && !((aluFunction == alu_or)) && !((aluFunction == alu_xor)) && !((aluFunction == alu_slt)) && !((aluFunction == alu_sltu)) && !((aluFunction == alu_sll)) && !((aluFunction == alu_sra)) && !((aluFunction == alu_srl)) && !((aluFunction == alu_copy1))) begin return (0); end
endfunction

function EncType getEncType (int unsigned encodedInstr);
	if (((encodedInstr & 127) == 51)) begin return (enc_r); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19)) begin return (enc_i_i); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && ((encodedInstr & 127) == 3)) begin return (enc_i_l); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && ((encodedInstr & 127) == 103)) begin return (enc_i_j); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && ((encodedInstr & 127) == 35)) begin return (enc_s); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99)) begin return (enc_b); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && (((encodedInstr & 127) == 55) || ((encodedInstr & 127) == 23))) begin return (enc_u); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && !((((encodedInstr & 127) == 55) || ((encodedInstr & 127) == 23))) && ((encodedInstr & 127) == 111)) begin return (enc_j); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && !((((encodedInstr & 127) == 55) || ((encodedInstr & 127) == 23))) && !(((encodedInstr & 127) == 111))) begin return (enc_err); end
endfunction

function int unsigned getEncUALUresult (int unsigned encodedInstr, int unsigned pcReg);
	if ((getInstrType(encodedInstr) == instr_lui)) begin return (getALUresult(alu_copy1,getImmediate(encodedInstr),0)); end
	else if (!((getInstrType(encodedInstr) == instr_lui))) begin return (getALUresult(alu_add,pcReg,getImmediate(encodedInstr))); end
endfunction

function int unsigned getImmediate (int unsigned encodedInstr);
	if (((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103)) && (((encodedInstr>>31) & 1) == 0)) begin return ((encodedInstr>>20)); end
	else if (((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103)) && !((((encodedInstr>>31) & 1) == 0))) begin return ((unsigned'(32'(-4096)) | (encodedInstr>>20))); end
	else if (!(((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103))) && ((encodedInstr & 127) == 35) && (((encodedInstr>>31) & 1) == 0)) begin return ((((encodedInstr>>20) & 4064) | ((encodedInstr>>7) & 31))); end
	else if (!(((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103))) && ((encodedInstr & 127) == 35) && !((((encodedInstr>>31) & 1) == 0))) begin return ((unsigned'(32'(-4096)) | (((encodedInstr>>20) & 4064) | ((encodedInstr>>7) & 31)))); end
	else if (!(((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103))) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99) && (((encodedInstr>>31) & 1) == 0)) begin return (((((encodedInstr<<4) & 2048) | ((encodedInstr>>20) & 2016)) | ((encodedInstr>>7) & 30))); end
	else if (!(((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103))) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99) && !((((encodedInstr>>31) & 1) == 0))) begin return ((unsigned'(32'(-4096)) | ((((encodedInstr<<4) & 2048) | ((encodedInstr>>20) & 2016)) | ((encodedInstr>>7) & 30)))); end
	else if (!(((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103))) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && (((encodedInstr & 127) == 55) || ((encodedInstr & 127) == 23))) begin return ((encodedInstr & unsigned'(32'(-4096)))); end
	else if (!(((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103))) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && !((((encodedInstr & 127) == 55) || ((encodedInstr & 127) == 23))) && ((encodedInstr & 127) == 111) && (((encodedInstr>>31) & 1) == 0)) begin return ((((encodedInstr & 1044480) | ((encodedInstr>>9) & 2048)) | ((encodedInstr>>20) & 2046))); end
	else if (!(((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103))) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && !((((encodedInstr & 127) == 55) || ((encodedInstr & 127) == 23))) && ((encodedInstr & 127) == 111) && !((((encodedInstr>>31) & 1) == 0))) begin return ((unsigned'(32'(-1048576)) | (((encodedInstr & 1044480) | ((encodedInstr>>9) & 2048)) | ((encodedInstr>>20) & 2046)))); end
	else if (!(((((encodedInstr & 127) == 19) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103))) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && !((((encodedInstr & 127) == 55) || ((encodedInstr & 127) == 23))) && !(((encodedInstr & 127) == 111))) begin return (0); end
endfunction

function InstrType getInstrType (int unsigned encodedInstr);
	if (((encodedInstr & 127) == 51) && (((encodedInstr>>12) & 7) == 0) && (((encodedInstr>>25) & 127) == 0)) begin return (instr_add); end
	else if (((encodedInstr & 127) == 51) && (((encodedInstr>>12) & 7) == 0) && !((((encodedInstr>>25) & 127) == 0)) && (((encodedInstr>>25) & 127) == 32)) begin return (instr_sub); end
	else if (((encodedInstr & 127) == 51) && (((encodedInstr>>12) & 7) == 0) && !((((encodedInstr>>25) & 127) == 0)) && !((((encodedInstr>>25) & 127) == 32))) begin return (instr_unknown); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && (((encodedInstr>>12) & 7) == 1)) begin return (instr_sll); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && (((encodedInstr>>12) & 7) == 2)) begin return (instr_slt); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && (((encodedInstr>>12) & 7) == 3)) begin return (instr_sltu); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && (((encodedInstr>>12) & 7) == 4)) begin return (instr_xor); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && (((encodedInstr>>12) & 7) == 5) && (((encodedInstr>>25) & 127) == 0)) begin return (instr_srl); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && (((encodedInstr>>12) & 7) == 5) && !((((encodedInstr>>25) & 127) == 0)) && (((encodedInstr>>25) & 127) == 32)) begin return (instr_sra); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && (((encodedInstr>>12) & 7) == 5) && !((((encodedInstr>>25) & 127) == 0)) && !((((encodedInstr>>25) & 127) == 32))) begin return (instr_unknown); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5)) && (((encodedInstr>>12) & 7) == 6)) begin return (instr_or); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5)) && !((((encodedInstr>>12) & 7) == 6)) && (((encodedInstr>>12) & 7) == 7)) begin return (instr_and); end
	else if (((encodedInstr & 127) == 51) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5)) && !((((encodedInstr>>12) & 7) == 6)) && !((((encodedInstr>>12) & 7) == 7))) begin return (instr_unknown); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && (((encodedInstr>>12) & 7) == 0)) begin return (instr_addi); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && (((encodedInstr>>12) & 7) == 1)) begin return (instr_slli); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && (((encodedInstr>>12) & 7) == 2)) begin return (instr_slti); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && (((encodedInstr>>12) & 7) == 3)) begin return (instr_sltui); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && (((encodedInstr>>12) & 7) == 4)) begin return (instr_xori); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && (((encodedInstr>>12) & 7) == 5) && (((encodedInstr>>25) & 127) == 0)) begin return (instr_srli); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && (((encodedInstr>>12) & 7) == 5) && !((((encodedInstr>>25) & 127) == 0)) && (((encodedInstr>>25) & 127) == 32)) begin return (instr_srai); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && (((encodedInstr>>12) & 7) == 5) && !((((encodedInstr>>25) & 127) == 0)) && !((((encodedInstr>>25) & 127) == 32))) begin return (instr_unknown); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5)) && (((encodedInstr>>12) & 7) == 6)) begin return (instr_ori); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5)) && !((((encodedInstr>>12) & 7) == 6)) && (((encodedInstr>>12) & 7) == 7)) begin return (instr_andi); end
	else if (!(((encodedInstr & 127) == 51)) && ((encodedInstr & 127) == 19) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 3)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5)) && !((((encodedInstr>>12) & 7) == 6)) && !((((encodedInstr>>12) & 7) == 7))) begin return (instr_unknown); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && ((encodedInstr & 127) == 3) && (((encodedInstr>>12) & 7) == 0)) begin return (instr_lb); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && ((encodedInstr & 127) == 3) && !((((encodedInstr>>12) & 7) == 0)) && (((encodedInstr>>12) & 7) == 1)) begin return (instr_lh); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && ((encodedInstr & 127) == 3) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && (((encodedInstr>>12) & 7) == 2)) begin return (instr_lw); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && ((encodedInstr & 127) == 3) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && (((encodedInstr>>12) & 7) == 4)) begin return (instr_lbu); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && ((encodedInstr & 127) == 3) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 4)) && (((encodedInstr>>12) & 7) == 5)) begin return (instr_lhu); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && ((encodedInstr & 127) == 3) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5))) begin return (instr_unknown); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && ((encodedInstr & 127) == 103)) begin return (instr_jalr); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && ((encodedInstr & 127) == 35) && (((encodedInstr>>12) & 7) == 0)) begin return (instr_sb); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && ((encodedInstr & 127) == 35) && !((((encodedInstr>>12) & 7) == 0)) && (((encodedInstr>>12) & 7) == 1)) begin return (instr_sh); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && ((encodedInstr & 127) == 35) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && (((encodedInstr>>12) & 7) == 2)) begin return (instr_sw); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && ((encodedInstr & 127) == 35) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 2))) begin return (instr_unknown); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99) && (((encodedInstr>>12) & 7) == 0)) begin return (instr_beq); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99) && !((((encodedInstr>>12) & 7) == 0)) && (((encodedInstr>>12) & 7) == 1)) begin return (instr_bne); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && (((encodedInstr>>12) & 7) == 4)) begin return (instr_blt); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 4)) && (((encodedInstr>>12) & 7) == 5)) begin return (instr_bge); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5)) && (((encodedInstr>>12) & 7) == 6)) begin return (instr_bltu); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5)) && !((((encodedInstr>>12) & 7) == 6)) && (((encodedInstr>>12) & 7) == 7)) begin return (instr_bgeu); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && ((encodedInstr & 127) == 99) && !((((encodedInstr>>12) & 7) == 0)) && !((((encodedInstr>>12) & 7) == 1)) && !((((encodedInstr>>12) & 7) == 4)) && !((((encodedInstr>>12) & 7) == 5)) && !((((encodedInstr>>12) & 7) == 6)) && !((((encodedInstr>>12) & 7) == 7))) begin return (instr_unknown); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && ((encodedInstr & 127) == 55)) begin return (instr_lui); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && !(((encodedInstr & 127) == 55)) && ((encodedInstr & 127) == 23)) begin return (instr_auipc); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && !(((encodedInstr & 127) == 55)) && !(((encodedInstr & 127) == 23)) && ((encodedInstr & 127) == 111)) begin return (instr_jal); end
	else if (!(((encodedInstr & 127) == 51)) && !(((encodedInstr & 127) == 19)) && !(((encodedInstr & 127) == 3)) && !(((encodedInstr & 127) == 103)) && !(((encodedInstr & 127) == 35)) && !(((encodedInstr & 127) == 99)) && !(((encodedInstr & 127) == 55)) && !(((encodedInstr & 127) == 23)) && !(((encodedInstr & 127) == 111))) begin return (instr_unknown); end
endfunction

function ME_MaskType getMemoryMask (InstrType instr);
	if (((instr == instr_lb) || (instr == instr_sb))) begin return (mt_b); end
	else if (!(((instr == instr_lb) || (instr == instr_sb))) && ((instr == instr_lh) || (instr == instr_sh))) begin return (mt_h); end
	else if (!(((instr == instr_lb) || (instr == instr_sb))) && !(((instr == instr_lh) || (instr == instr_sh))) && ((instr == instr_lw) || (instr == instr_sw))) begin return (mt_w); end
	else if (!(((instr == instr_lb) || (instr == instr_sb))) && !(((instr == instr_lh) || (instr == instr_sh))) && !(((instr == instr_lw) || (instr == instr_sw))) && (instr == instr_lbu)) begin return (mt_bu); end
	else if (!(((instr == instr_lb) || (instr == instr_sb))) && !(((instr == instr_lh) || (instr == instr_sh))) && !(((instr == instr_lw) || (instr == instr_sw))) && !((instr == instr_lbu)) && (instr == instr_lhu)) begin return (mt_hu); end
	else if (!(((instr == instr_lb) || (instr == instr_sb))) && !(((instr == instr_lh) || (instr == instr_sh))) && !(((instr == instr_lw) || (instr == instr_sw))) && !((instr == instr_lbu)) && !((instr == instr_lhu))) begin return (mt_x); end
endfunction

function int unsigned getRdAddr (int unsigned encodedInstr);
	if (((((((((encodedInstr & 127) == 51) || ((encodedInstr & 127) == 19)) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103)) || ((encodedInstr & 127) == 55)) || ((encodedInstr & 127) == 23)) || ((encodedInstr & 127) == 111))) begin return (((encodedInstr>>7) & 31)); end
	else if (!(((((((((encodedInstr & 127) == 51) || ((encodedInstr & 127) == 19)) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103)) || ((encodedInstr & 127) == 55)) || ((encodedInstr & 127) == 23)) || ((encodedInstr & 127) == 111)))) begin return (0); end
endfunction

function int unsigned getRs1Addr (int unsigned encodedInstr);
	if ((((((((encodedInstr & 127) == 51) || ((encodedInstr & 127) == 19)) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103)) || ((encodedInstr & 127) == 35)) || ((encodedInstr & 127) == 99))) begin return (((encodedInstr>>15) & 31)); end
	else if (!((((((((encodedInstr & 127) == 51) || ((encodedInstr & 127) == 19)) || ((encodedInstr & 127) == 3)) || ((encodedInstr & 127) == 103)) || ((encodedInstr & 127) == 35)) || ((encodedInstr & 127) == 99)))) begin return (0); end
endfunction

function int unsigned getRs2Addr (int unsigned encodedInstr);
	if (((((encodedInstr & 127) == 51) || ((encodedInstr & 127) == 35)) || ((encodedInstr & 127) == 99))) begin return (((encodedInstr>>20) & 31)); end
	else if (!(((((encodedInstr & 127) == 51) || ((encodedInstr & 127) == 35)) || ((encodedInstr & 127) == 99)))) begin return (0); end
endfunction

function int unsigned readRegfile (int unsigned regfile_reg_file_01;int unsigned regfile_reg_file_02;int unsigned regfile_reg_file_03;int unsigned regfile_reg_file_04;int unsigned regfile_reg_file_05;int unsigned regfile_reg_file_06;int unsigned regfile_reg_file_07;int unsigned regfile_reg_file_08;int unsigned regfile_reg_file_09;int unsigned regfile_reg_file_10;int unsigned regfile_reg_file_11;int unsigned regfile_reg_file_12;int unsigned regfile_reg_file_13;int unsigned regfile_reg_file_14;int unsigned regfile_reg_file_15;int unsigned regfile_reg_file_16;int unsigned regfile_reg_file_17;int unsigned regfile_reg_file_18;int unsigned regfile_reg_file_19;int unsigned regfile_reg_file_20;int unsigned regfile_reg_file_21;int unsigned regfile_reg_file_22;int unsigned regfile_reg_file_23;int unsigned regfile_reg_file_24;int unsigned regfile_reg_file_25;int unsigned regfile_reg_file_26;int unsigned regfile_reg_file_27;int unsigned regfile_reg_file_28;int unsigned regfile_reg_file_29;int unsigned regfile_reg_file_30;int unsigned regfile_reg_file_31, int unsigned src);
	if ((src == 0)) begin return (0); end
	else if (!((src == 0)) && (src == 1)) begin return (regfile.reg_file_01); end
	else if (!((src == 0)) && !((src == 1)) && (src == 2)) begin return (regfile.reg_file_02); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && (src == 3)) begin return (regfile.reg_file_03); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && (src == 4)) begin return (regfile.reg_file_04); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && (src == 5)) begin return (regfile.reg_file_05); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && (src == 6)) begin return (regfile.reg_file_06); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && (src == 7)) begin return (regfile.reg_file_07); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && (src == 8)) begin return (regfile.reg_file_08); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && (src == 9)) begin return (regfile.reg_file_09); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && (src == 10)) begin return (regfile.reg_file_10); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && (src == 11)) begin return (regfile.reg_file_11); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && (src == 12)) begin return (regfile.reg_file_12); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && (src == 13)) begin return (regfile.reg_file_13); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && (src == 14)) begin return (regfile.reg_file_14); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && (src == 15)) begin return (regfile.reg_file_15); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && (src == 16)) begin return (regfile.reg_file_16); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && (src == 17)) begin return (regfile.reg_file_17); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && (src == 18)) begin return (regfile.reg_file_18); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && (src == 19)) begin return (regfile.reg_file_19); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && (src == 20)) begin return (regfile.reg_file_20); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && (src == 21)) begin return (regfile.reg_file_21); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && (src == 22)) begin return (regfile.reg_file_22); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && !((src == 22)) && (src == 23)) begin return (regfile.reg_file_23); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && !((src == 22)) && !((src == 23)) && (src == 24)) begin return (regfile.reg_file_24); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && !((src == 22)) && !((src == 23)) && !((src == 24)) && (src == 25)) begin return (regfile.reg_file_25); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && !((src == 22)) && !((src == 23)) && !((src == 24)) && !((src == 25)) && (src == 26)) begin return (regfile.reg_file_26); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && !((src == 22)) && !((src == 23)) && !((src == 24)) && !((src == 25)) && !((src == 26)) && (src == 27)) begin return (regfile.reg_file_27); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && !((src == 22)) && !((src == 23)) && !((src == 24)) && !((src == 25)) && !((src == 26)) && !((src == 27)) && (src == 28)) begin return (regfile.reg_file_28); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && !((src == 22)) && !((src == 23)) && !((src == 24)) && !((src == 25)) && !((src == 26)) && !((src == 27)) && !((src == 28)) && (src == 29)) begin return (regfile.reg_file_29); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && !((src == 22)) && !((src == 23)) && !((src == 24)) && !((src == 25)) && !((src == 26)) && !((src == 27)) && !((src == 28)) && !((src == 29)) && (src == 30)) begin return (regfile.reg_file_30); end
	else if (!((src == 0)) && !((src == 1)) && !((src == 2)) && !((src == 3)) && !((src == 4)) && !((src == 5)) && !((src == 6)) && !((src == 7)) && !((src == 8)) && !((src == 9)) && !((src == 10)) && !((src == 11)) && !((src == 12)) && !((src == 13)) && !((src == 14)) && !((src == 15)) && !((src == 16)) && !((src == 17)) && !((src == 18)) && !((src == 19)) && !((src == 20)) && !((src == 21)) && !((src == 22)) && !((src == 23)) && !((src == 24)) && !((src == 25)) && !((src == 26)) && !((src == 27)) && !((src == 28)) && !((src == 29)) && !((src == 30))) begin return (regfile.reg_file_31); end
endfunction

